{
    "swagger": "2.0",
    "info": {
        "version": "2016-05-01",
        "title": "BackupManagementClient",
        "description": "The Admin Backup Management Client."
    },
    "host": "management.local.azurestack.external",
    "schemes": [
        "https"
    ],
    "paths": {
        "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroup}/providers/Microsoft.Backup.Admin/backupLocations": {
            "get": {
                "x-ms-examples": {
                    "Get the list of usage aggregates for all tenants.": {
                        "$ref": "./examples/BackupLocations/List.json"
                    }
                },
                "description": "Gets a collection of BackupLocations, which are UsageAggregates from direct tenants.",
                "tags": [
                    "BackupLocations"
                ],
                "operationId": "BackupLocations_List",
                "parameters": [
                    {
                        "$ref": "Backup.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "Backup.json#/parameters/ResourceGroupParameter"
                    },
                    {
                        "$ref": "Backup.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BackupLocationList"
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ]
            },
            "put": {
                "x-ms-examples": {
                    "Create a new backup location.": {
                        "$ref": "./examples/BackupLocations/Create.json"
                    }
                },
                "description": "Create a new backup location.",
                "tags": [
                    "BackupLocations"
                ],
                "operationId": "BackupLocations_Create",
                "parameters": [
                    {
                        "$ref": "Backup.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "Backup.json#/parameters/ResourceGroupParameter"
                    },
                    {
                        "$ref": "Backup.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BackupLocation"
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroup}/providers/Microsoft.Backup.Admin/backupLocations/{backupLocation}": {
            "get": {
                "x-ms-examples": {
                    "Get a specific backup location based on name.": {
                        "$ref": "./examples/BackupLocations/Get.json"
                    }
                },
                "description": "Get a specific backup location based on name",
                "tags": [
                    "BackupLocations"
                ],
                "operationId": "BackupLocations_Get",
                "parameters": [
                    {
                        "$ref": "Backup.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "Backup.json#/parameters/ResourceGroupParameter"
                    },
                    {
                        "$ref": "#/parameters/BackupLocationParameter"
                    },
                    {
                        "$ref": "Backup.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BackupLocation"
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroup}/providers/Microsoft.Backup.Admin/backupLocations/{backupLocation}/createBackup": {
            "post": {
                "x-ms-examples": {
                    "Backup a specific location.": {
                        "$ref": "./examples/BackupLocations/Backup.json"
                    }
                },
                "description": "Backup a specific location.",
                "tags": [
                    "BackupLocations"
                ],
                "operationId": "BackupLocations_CreateBackup",
                "parameters": [
                    {
                        "$ref": "Backup.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "Backup.json#/parameters/ResourceGroupParameter"
                    },
                    {
                        "$ref": "#/parameters/BackupLocationParameter"
                    },
                    {
                        "$ref": "Backup.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ]
            }
        }
    },
    "definitions": {
        "BackupLocation": {
            "description": "Information about the backup location.",
            "type": "object",
            "properties": {
                "properties": {
                    "description": "Properties of a backup location.",
                    "$ref": "#/definitions/BackupLocationModel",
                    "x-ms-client-flatten": true
                }
            },
            "allOf": [
                {
                    "$ref": "Backup.json#/definitions/Resource"
                }
            ]
        },
        "BackupLocationModel": {
            "type": "object",
            "description": "Properties of a backup location.",
            "properties": {
                "externalStoreDefault": {
                    "description": "Information about an external storage location.",
                    "$ref": "#/definitions/ExternalStore",
                    "x-ms-client-flatten": true
                }
            }
        },
        "ExternalStore": {
            "type": "object",
            "description": "Information about an external storage location.",
            "properties": {
                "path": {
                    "description": "Path to the storage location",
                    "type": "string"
                },
                "userName": {
                    "description": "Username to access the location.",
                    "type": "string"
                },
                "password": {
                    "description": "Password to access the location.",
                    "type": "string"
                },
                "encryptionKeyBase64": {
                    "description": "Encryption key.",
                    "type": "string"
                },
                "backupFrequencyInMinutes": {
                    "description": "How often a backup is performed.",
                    "type": "string"
                },
                "availableCapacity": {
                    "description": "Free space in location.",
                    "type": "string"
                },
                "isBackupSchedulerEnabled": {
                    "description": "True if the backup scheduler is enabled.",
                    "type": "boolean"
                },
                "nextBackupTime": {
                    "description": "The scheduled time of the next backup.",
                    "type": "string"
                },
                "lastBackupTime": {
                    "description": "Time of backup.",
                    "type": "string"
                }
            }
        },
        "BackupLocationList": {
            "type": "object",
            "description": "List of .",
            "properties": {
                "value": {
                    "description": "List of .",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BackupLocation"
                    }
                },
                "nextLink": {
                    "description": "URI to the next page.",
                    "type": "string"
                }
            }
        }
    },
    "parameters": {
        "BackupLocationParameter": {
            "name": "backupLocation",
            "in": "path",
            "description": "Name of the backup location.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
        }
    },
    "securityDefinitions": {
        "azure_auth": {
            "type": "oauth2",
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "flow": "implicit",
            "description": "Azure Active Directory OAuth2 Flow",
            "scopes": {
                "user_impersonation": "impersonate your user account"
            }
        }
    },
    "security": [
        {
            "azure_auth": [
                "user_impersonation"
            ]
        }
    ]
}